name: Deploy

on:
  push:
    branches:
      - main

env:
  MONGO_URI: ${{ secrets.MONGO_URI }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Setup pnpm
        uses: pnpm/action-setup@master

      - name: Setup Node.js
        uses: actions/setup-node@main
        with:
          node-version-file: ./.node-version

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build

      - name: Create deployment package
        run: |
          mkdir -p deploy-package
          cp -r .next/standalone deploy-package/
          cp -r public deploy-package/
          cp -r scripts deploy-package/
          cp package.json deploy-package/
          cp pm2.config.cjs deploy-package/
          cd deploy-package
          tar -czf ../deploy.tar.gz .

      - name: Deploy package via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          source: "deploy.tar.gz"
          target: ${{ secrets.DEPLOY_TARGET }}

      - name: Unpack and Restart Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            cd ${{ secrets.DEPLOY_TARGET }}
            rm -rf standalone/ public/ scripts/ package.json pm2.config.cjs
            tar -xzf deploy.tar.gz
            rm deploy.tar.gz
            ~/.volta/bin/pm2 restart pm2.config.cjs
            cd scripts
            ~/.local/bin/uv venv && source .venv/bin/activate && ~/.local/bin/uv sync
